[{"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\index.js":"1","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\App.js":"2","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"3","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\Todo.js":"4","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"5","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\Input.js":"6","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\Filter.js":"7","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\lib\\util.js":"8","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\lib\\firebase.js":"9","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\Auth.js":"10","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\hooks\\storage_todo.js":"11","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\hooks\\storage_user.js":"12"},{"size":517,"mtime":1621507016557,"results":"13","hashOfConfig":"14"},{"size":330,"mtime":1621522620257,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1621507016573,"results":"16","hashOfConfig":"14"},{"size":2167,"mtime":1621522169223,"results":"17","hashOfConfig":"14"},{"size":683,"mtime":1621507016557,"results":"18","hashOfConfig":"14"},{"size":849,"mtime":1621507016557,"results":"19","hashOfConfig":"14"},{"size":967,"mtime":1621507016557,"results":"20","hashOfConfig":"14"},{"size":68,"mtime":1621507016573,"results":"21","hashOfConfig":"14"},{"size":1020,"mtime":1621522253750,"results":"22","hashOfConfig":"14"},{"size":1526,"mtime":1621522152473,"results":"23","hashOfConfig":"14"},{"size":1673,"mtime":1621522209587,"results":"24","hashOfConfig":"14"},{"size":674,"mtime":1621522229641,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ivte3q",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\index.js",[],["55","56"],"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\App.js",["57"],"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\Todo.js",["58"],"import React, {useState} from 'react';\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\nimport useStorageTodo from \"../hooks/storage_todo\";\r\nimport Auth from \"./Auth\";\r\n/*\r\n  【Todoのデータ構成】\r\n　・key：Todoを特定するID（String）\r\n　・text：Todoの内容（String）\r\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* カスタムフック */\r\n\r\nfunction Todo() {\r\n    const [items, addItem, updateItem, cleanItems] = useStorageTodo();\r\n\r\n    const handleCheckTodoItem = (item) => {\r\n        updateItem(item);\r\n    };\r\n    const handleAdd = (text) => {\r\n        const newItem = {key: getKey(), text: text, done: false};\r\n        addItem(newItem);\r\n    };\r\n    const [tab, setTab] = useState(\"すべて\");\r\n    const itemTab = () => {\r\n        return items.filter((item) => {\r\n            if (tab === \"すべて\") {\r\n                return item;\r\n            }\r\n            if (tab === \"未完了\" && !item.done) {\r\n                return item;\r\n            }\r\n            if (tab === \"完了済み\" && item.done) {\r\n                return item;\r\n            }\r\n        });\r\n    };\r\n    const handleChangeTab = (target) => {\r\n        setTab(target);\r\n    };\r\n    const handleCleanItem = () => {\r\n        cleanItems();\r\n    };\r\n    return (\r\n        <div className=\"panel\">\r\n            <Auth />\r\n            <div className=\"panel-heading\">\r\n                ITSS ToDoアプリ\r\n            </div>\r\n            <Input onAdd={handleAdd}/>\r\n            <Filter onClick={handleChangeTab}/>\r\n            {itemTab().map(item => (\r\n                <TodoItem item={item} key={item.key} onCheck={handleCheckTodoItem}/>\r\n            ))}\r\n            <div className=\"panel-block\">\r\n                {itemTab().length} items\r\n            </div>\r\n            <div className=\"panel-block\">\r\n                <button className=\"button is-light is-fullwidth\" onClick={handleCleanItem}>全てのToDoを削除</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",[],"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\Input.js",["59"],"import React, { useState } from 'react';\r\n/* \r\n  【inputコンポーネント】\r\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input( {onAdd} ) {\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleChange = e => setText(e.target.value);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-block\">\r\n    \t<input\r\n          class=\"input\"\r\n          type=\"text\"\r\n          placeholder=\"ToDoを入力してください\"\r\n          value={text}\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\Filter.js",["60","61","62"],"/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter( {value, onChange} ) {\r\n  const handleClick = (key, e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  }\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n    \t<a\r\n\t        href=\"#\"\r\n\t        onClick={handleClick.bind(null, 'ALL')}\r\n\t        className={value === 'ALL' ?  'is-active' : ''}\r\n\t      >全て\r\n\t    </a>\r\n\t    <a\r\n\t        href=\"#\"\r\n\t        onClick={handleClick.bind(null, 'TODO')}\r\n\t        className={value === 'TODO' ?  'is-active' : ''}\r\n\t      >未完了\r\n\t    </a>\r\n\t    <a\r\n\t        href=\"#\"\r\n\t        onClick={handleClick.bind(null, 'DONE')}\r\n\t        className={value === 'DONE' ?  'is-active' : ''}\r\n\t      >完了済み\r\n\t    </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\lib\\firebase.js",[],"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\components\\Auth.js",["63"],"import React, {useEffect, useState} from \"react\";\r\nimport firebase,{uiConfig} from \"../lib/firebase\";\r\nimport {StyledFirebaseAuth} from \"react-firebaseui\";\r\nimport useStorageUser from \"../hooks/storage_user\";\r\n\r\n\r\nfunction Auth() {\r\n    const [users, addUser] = useStorageUser();\r\n    const [isSignedIn, setIsSignedIn] = useState(false);\r\n    useEffect(() => {\r\n        const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\r\n            if(user){\r\n                let flag = false;\r\n                for(let target of users){\r\n                    if(target.key === user.email){\r\n                        flag = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(!flag){\r\n                    addUser({key: user.email, name: user.displayName})\r\n                }\r\n            }\r\n            setIsSignedIn(!!user);\r\n        });\r\n        return () => unregisterAuthObserver();\r\n    }, []);\r\n    const signout = () => {\r\n        firebase.auth().signOut();\r\n    };\r\n    if (!isSignedIn) {\r\n        return (\r\n            <div className=\"column panel-block\">\r\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"column panel-block\">\r\n            <p>{firebase.auth().currentUser.displayName}</p>\r\n            <button className=\"button is-danger is-light is-small\" onClick={signout}>Sign out</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Auth;\r\n","D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\hooks\\storage_todo.js",[],"D:\\Code\\fullstack\\itss_std_react_todo_k62\\src\\hooks\\storage_user.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":31,"column":36,"nodeType":"74","messageId":"75","endLine":31,"endColumn":38},{"ruleId":"68","severity":1,"message":"76","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":14,"column":6,"nodeType":"79","endLine":18,"endColumn":9},{"ruleId":"77","severity":1,"message":"78","line":20,"column":6,"nodeType":"79","endLine":24,"endColumn":9},{"ruleId":"77","severity":1,"message":"78","line":26,"column":6,"nodeType":"79","endLine":30,"endColumn":9},{"ruleId":"80","severity":1,"message":"81","line":27,"column":8,"nodeType":"82","endLine":27,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addUser' and 'users'. Either include them or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [addUser, users]",{"range":"89","text":"90"},[950,952],"[addUser, users]"]